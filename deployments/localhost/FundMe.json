{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf5cb5dc97cb4300a0f4cdd65c29b42eb00129fceb6bbd8b81504357965e31291",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "989838",
    "logsBloom": "0x
    "blockHash": "0x87b936a334fabaa57e9e8759c5ab1d19ba28d05ff80a0d10638add2c36e72232",
    "transactionHash": "0xf5cb5dc97cb4300a0f4cdd65c29b42eb00129fceb6bbd8b81504357965e31291",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "989838",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "79bdbac34758a24c0d3b3ed4302ea51a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x5640bce6f7de68aa6719b8f34983d6b979b642b965b6f2758cca31150f93acef\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xaf7bec5adb8754d2fecb6986d31544312e67b073ea8c38214800ccc475d9234f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200121438038062001214833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110876200018d6000396000818161033f015281816104d201528181610578015281816105c801526107be01526110876000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a81565b6102f4565b6040516100cc9190610ac7565b60405180910390f35b3480156100e157600080fd5b506100ea61033d565b005b3480156100f857600080fd5b50610101610567565b60405161010e9190610ac7565b60405180910390f35b34801561012357600080fd5b5061012c610574565b6040516101399190610af1565b60405180910390f35b34801561014e57600080fd5b5061015761059c565b6040516101649190610b6b565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105c6565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bb2565b610854565b6040516101c29190610af1565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089b90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c3c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cba565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d03565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610977565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161051490610d63565b60006040518083038185875af1925050503d8060008114610551576040519150601f19603f3d011682016040523d82523d6000602084013e610556565b606091505b505090508061056457600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610684575b5050505050905060005b81518110156107595760008282815181106106f6576106f5610c5c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075190610cba565b9150506106d8565b50600067ffffffffffffffff81111561077557610774610d03565b5b6040519080825280602002602001820160405280156107a35781602001602082028036833780820191505090505b50600090805190602001906107b9929190610977565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080090610d63565b60006040518083038185875af1925050503d806000811461083d576040519150601f19603f3d011682016040523d82523d6000602084013e610842565b606091505b505090508061085057600080fd5b5050565b600080828154811061086957610868610c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a7836108d7565b90506000670de0b6b3a764000085836108c09190610d78565b6108ca9190610e01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190610ebf565b5050509150506402540be4008161096f9190610f3a565b915050919050565b8280548282559060005260206000209081019282156109f0579160200282015b828111156109ef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610997565b5b5090506109fd9190610a01565b5090565b5b80821115610a1a576000816000905550600101610a02565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4e82610a23565b9050919050565b610a5e81610a43565b8114610a6957600080fd5b50565b600081359050610a7b81610a55565b92915050565b600060208284031215610a9757610a96610a1e565b5b6000610aa584828501610a6c565b91505092915050565b6000819050919050565b610ac181610aae565b82525050565b6000602082019050610adc6000830184610ab8565b92915050565b610aeb81610a43565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b6000819050919050565b6000610b31610b2c610b2784610a23565b610b0c565b610a23565b9050919050565b6000610b4382610b16565b9050919050565b6000610b5582610b38565b9050919050565b610b6581610b4a565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b610b8f81610aae565b8114610b9a57600080fd5b50565b600081359050610bac81610b86565b92915050565b600060208284031215610bc857610bc7610a1e565b5b6000610bd684828501610b9d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c26601b83610bdf565b9150610c3182610bf0565b602082019050919050565b60006020820190508181036000830152610c5581610c19565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc582610aae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf857610cf7610c8b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4d600083610d32565b9150610d5882610d3d565b600082019050919050565b6000610d6e82610d40565b9150819050919050565b6000610d8382610aae565b9150610d8e83610aae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc757610dc6610c8b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0c82610aae565b9150610e1783610aae565b925082610e2757610e26610dd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5181610e32565b8114610e5c57600080fd5b50565b600081519050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b600081519050610eb981610b86565b92915050565b600080600080600060a08688031215610edb57610eda610a1e565b5b6000610ee988828901610e5f565b9550506020610efa88828901610e95565b9450506040610f0b88828901610eaa565b9350506060610f1c88828901610eaa565b9250506080610f2d88828901610e5f565b9150509295509295909350565b6000610f4582610e74565b9150610f5083610e74565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8f57610f8e610c8b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fcc57610fcb610c8b565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561100957611008610c8b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561104657611045610c8b565b5b82820290509291505056fea2646970667358221220986e66442f2c43b427c2e3bb51d90bb04126b712401a4a790ddffcf784f7e1d864736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a81565b6102f4565b6040516100cc9190610ac7565b60405180910390f35b3480156100e157600080fd5b506100ea61033d565b005b3480156100f857600080fd5b50610101610567565b60405161010e9190610ac7565b60405180910390f35b34801561012357600080fd5b5061012c610574565b6040516101399190610af1565b60405180910390f35b34801561014e57600080fd5b5061015761059c565b6040516101649190610b6b565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105c6565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bb2565b610854565b6040516101c29190610af1565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089b90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c3c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cba565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d03565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610977565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161051490610d63565b60006040518083038185875af1925050503d8060008114610551576040519150601f19603f3d011682016040523d82523d6000602084013e610556565b606091505b505090508061056457600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610684575b5050505050905060005b81518110156107595760008282815181106106f6576106f5610c5c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075190610cba565b9150506106d8565b50600067ffffffffffffffff81111561077557610774610d03565b5b6040519080825280602002602001820160405280156107a35781602001602082028036833780820191505090505b50600090805190602001906107b9929190610977565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080090610d63565b60006040518083038185875af1925050503d806000811461083d576040519150601f19603f3d011682016040523d82523d6000602084013e610842565b606091505b505090508061085057600080fd5b5050565b600080828154811061086957610868610c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a7836108d7565b90506000670de0b6b3a764000085836108c09190610d78565b6108ca9190610e01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190610ebf565b5050509150506402540be4008161096f9190610f3a565b915050919050565b8280548282559060005260206000209081019282156109f0579160200282015b828111156109ef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610997565b5b5090506109fd9190610a01565b5090565b5b80821115610a1a576000816000905550600101610a02565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4e82610a23565b9050919050565b610a5e81610a43565b8114610a6957600080fd5b50565b600081359050610a7b81610a55565b92915050565b600060208284031215610a9757610a96610a1e565b5b6000610aa584828501610a6c565b91505092915050565b6000819050919050565b610ac181610aae565b82525050565b6000602082019050610adc6000830184610ab8565b92915050565b610aeb81610a43565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b6000819050919050565b6000610b31610b2c610b2784610a23565b610b0c565b610a23565b9050919050565b6000610b4382610b16565b9050919050565b6000610b5582610b38565b9050919050565b610b6581610b4a565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b610b8f81610aae565b8114610b9a57600080fd5b50565b600081359050610bac81610b86565b92915050565b600060208284031215610bc857610bc7610a1e565b5b6000610bd684828501610b9d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c26601b83610bdf565b9150610c3182610bf0565b602082019050919050565b60006020820190508181036000830152610c5581610c19565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc582610aae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf857610cf7610c8b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4d600083610d32565b9150610d5882610d3d565b600082019050919050565b6000610d6e82610d40565b9150819050919050565b6000610d8382610aae565b9150610d8e83610aae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc757610dc6610c8b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0c82610aae565b9150610e1783610aae565b925082610e2757610e26610dd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5181610e32565b8114610e5c57600080fd5b50565b600081519050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b600081519050610eb981610b86565b92915050565b600080600080600060a08688031215610edb57610eda610a1e565b5b6000610ee988828901610e5f565b9550506020610efa88828901610e95565b9450506040610f0b88828901610eaa565b9350506060610f1c88828901610eaa565b9250506080610f2d88828901610e5f565b9150509295509295909350565b6000610f4582610e74565b9150610f5083610e74565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8f57610f8e610c8b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fcc57610fcb610c8b565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561100957611008610c8b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561104657611045610c8b565b5b82820290509291505056fea2646970667358221220986e66442f2c43b427c2e3bb51d90bb04126b712401a4a790ddffcf784f7e1d864736f6c63430008080033",
  "devdoc": {
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}